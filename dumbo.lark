program: (txt|dumbo_block)+

?dumbo_block: "{{" expressions_list "}}"

expressions_list: (expression ";")+

expression: "print" string_expression -> print_statement
          | "for" variable "in" (string_list|variable) "do" expressions_list "endfor" -> for_statement
          | "if" boolean_expression "do" expressions_list "endif" -> if_statement
          | variable ":=" (string_expression|string_list) -> assign

?arithmetic_expression: arithmetic_expression ADD_OP arithmetic_expression
                      | arithmetic_expression MULL_OP arithmetic_expression
                      | "(" arithmetic_expression ")"
                      | (integer|variable)

?string_expression: string_expression "." string_expression
                  | (string | arithmetic_expression | boolean_expression)

!boolean_expression: boolean_expression LOG_OP boolean_expression
                  | arithmetic_expression COMP_OP arithmetic_expression
                  | "true" -> true
                  | "false" -> false

string_list: "(" string ("," string)* ")"
variable: CNAME
integer: INT
string: ESCAPED_STRING
txt: /((?!{{)(.|\n))+/

ADD_OP: "+" | "-"
MULL_OP: "*" | "/"
LOG_OP: "and" | "or"
COMP_OP: "<" | ">" | "=" | "!="
ESCAPED_STRING: "'" _STRING_ESC_INNER "'"

%import common._STRING_ESC_INNER
%import common.CNAME
%import common.INT
%import common.WS
%ignore WS